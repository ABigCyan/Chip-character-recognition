# Ultralytics YOLO 🚀, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512]   # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512]   # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]   # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 3, C2f, [128, True]]   # 2
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
  - [-1, 6, C2f, [256, True]]   # 4
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
  - [-1, 6, C2f, [512, True]]   # 6
  - [-1, 1, Conv, [1024, 3, 2]] # 7-P5/32
  - [-1, 3, C2f, [1024, True]]  # 8
  - [-1, 1, SPPF, [1024, 5]]    # 9
  - [-1, 1, SEAttention, [16]]  # 10

# YOLOv8.0n head
head:
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]      # 11
  - [[-1, 6], 1, Concat, [1]]                       # 12 cat backbone P4
  - [-1, 3, C2f, [512]]                             # 13

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]      # 14
  - [[-1, 4], 1, Concat, [1]]                       # 15 cat backbone P3
  - [-1, 3, C2f, [256]]                             # 16 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]                      # 17
  - [[-1, 13], 1, Concat, [1]]                      # 18 cat head P4
  - [-1, 3, C2f, [512]]                             # 19 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]                      # 20
  - [[-1, 10], 1, Concat, [1]]                      # 21 cat head P5
  - [-1, 3, C2f, [1024]]                            # 22 (P5/32-large)

  - [[16, 19, 22], 1, Detect, [nc]]                 # 23 Detect(P3, P4, P5)



# 1. 在实现时，- [-1, 1, SEAttention, [16]]，后面的 [16] 是需要传入到SEAttention中的参数，16是reduction，可以通过实现方法查看。

# 2. 要注意在添加了注意力后，每一层的索引发生了变化，尤其是当输入需要用到前面的某一层的输出时，要注意层的索引。
#    i.e. [[-1, 13], 1, Concat, [1]]         # 18 cat head P4
#         [[16, 19, 22], 1, Detect, [nc]]    # 23 Detect(P3, P4, P5)
# 可以同 yolov8.yaml对比一下，发生变化的位置

# 同样如果要是添加在别的位置，也要注意 层索引 的变化

# 需要注意添加的位置的输出通道数必须得大于 SEAttention 函数中传入的 reduction， 否则 channel // reduction 为0了， reduction 可以根据输出大小自己确定


# 参考博客：https://blog.csdn.net/qq_28949847/article/details/134166047?spm=1001.2014.3001.5502
